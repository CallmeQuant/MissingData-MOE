)
res_maugis_selvar <- SelvarClustLasso(
x = data_maugis_2012$data,
nbcluster = 2:4,
# models="mixmodGaussianModel(family=\"diagonal\")",
# models = "mixmodGaussianModel(listModels = c(\"Gaussian_pk_B\"))",
# models="gaussian_pk_sjk",
models = "VVV",
rmodel = c("LB", "LI", "LC"),
hsize = 2,
nbcores = 6,
impute_missing = FALSE,
scale_data = TRUE
)
sourceCpp("D:\\RProject\\MissingData_MOE\\CritclustWrapper.cpp")
numExp <- 1:7
k <- 4
result_mclust <- critClustWrapper(data_maugis_2012$data, numExp, k, "Mclust", "VVV")
print(result_mclust)
sourceCpp("D:\\RProject\\MissingData_MOE\\CritclustWrapper.cpp")
sourceCpp("D:\\RProject\\MissingData_MOE\\CritclustWrapper.cpp")
result_mclust <- critClustWrapper(data_maugis_2012$data, numExp, k, "Mclust", "VVV")
remove.packages("SelvarMix")
create_package_tarball <- function(path) {
Rcpp::compileAttributes(path)
pkg_name <- basename(path)
parent_dir <- dirname(path)
devtools::build(path, path = parent_dir, binary = FALSE)
}
tar_filename <- "D:/RProject/SelvarMix_1.2.1.tar.gz"
if (!file.exists(tar_filename)) {
create_package_tarball("D:/Rproject/SelvarMix_extend")
}
install.packages("D:/RProject/SelvarMix_1.2.1.tar.gz", repos = NULL, type="source")
create_package_tarball <- function(path) {
Rcpp::compileAttributes(path)
pkg_name <- basename(path)
parent_dir <- dirname(path)
devtools::build(path, path = parent_dir, binary = FALSE)
}
tar_filename <- "D:/RProject/SelvarMix_1.2.1.tar.gz"
if (!file.exists(tar_filename)) {
create_package_tarball("D:/Rproject/SelvarMix_extend")
}
install.packages("D:/RProject/SelvarMix_1.2.1.tar.gz", repos = NULL, type="source")
rm(list=ls())
# Data wrangling
library(reshape2)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(tidyr)
library(purrr)
library(stringr)
select <- dplyr::select
library(here)
library(Gmisc)
library(glasso)
library(mvtnorm)
library(Matrix)
library(stats)
library(BMA)
library(mlogitBMA)
library(mlogit)
library(foreach)
library(parallel)
library(doParallel)
library(iterators)
library(matrixStats)
library(aricode)
source("amputation.R")
# MixAll and SelvarMix
library(SelvarMix)
library(MixAll)
library(missRanger)
# Benchmarks
library(vscc)
library(VarSelLCM)
library(RMixtComp)
library(mixture)
library(Rmixmod)
library(clustvarsel)
library(mvtnorm)
library(mclust)
library(MGMM)
library(EMCluster)
library(flexmix)
library(mixtools)
library(bgmm)
dmvnorm <- mvtnorm::dmvnorm
library(MASS)
library(data.table)
library(tmvtnorm)
library(MomTrunc)
library(Stat2Data)
library(VIM)
library(CensMFM)
library(kpodclustr)
library(Amelia)
library(mice)
library(mi)
library(tictoc)
source("utils_missingdata_exp.R")
source("simulate_data.R")
source("EM_Gaussian_withoutNA.R")
source("EM_Gaussian.R")
source("SEM_Gaussian.R")
source("Functions_misspecification.R")
source('Internal_Functions_Gaussian.R')
source('Internal_Functions_All.R')
source('initialization.R')
source('utils_sportisse_exp.R')
source('GPMMCM/Function/F-G.R')
source('GPMMCM/Function/fn/EEE_GMIXCMB.R')
source('GPMMCM/Function/fn/EEI_GMIXCMB.R')
source('GPMMCM/Function/fn/EEV_GMIXCMB.R')
source('GPMMCM/Function/fn/EII_GMIXCMB.R')
source('GPMMCM/Function/fn/EVE_GMIXCMB.R')
source('GPMMCM/Function/fn/EVI_GMIXCMB.R')
source('GPMMCM/Function/fn/EVI_GMIXCMB.R')
source('GPMMCM/Function/fn/EVV_GMIXCMB.R')
source('GPMMCM/Function/fn/VEE_GMIXCMB.R')
source('GPMMCM/Function/fn/VEI_GMIXCMB.R')
source('GPMMCM/Function/fn/VEV_GMIXCMB.R')
source('GPMMCM/Function/fn/VII_GMIXCMB.R')
source('GPMMCM/Function/fn/VVE_GMIXCMB.R')
source('GPMMCM/Function/fn/VVI_GMIXCMB.R')
source('GPMMCM/Function/fn/VVV_GMIXCMB.R')
# Improve model choice
source('ImprovingModelChoice/code/algorithms.R')
source('listToS4.R')
data_maugis_2012 <- simulate_Maugis_data2012()
res_maugis_selvar <- SelvarClustLasso(
x = data_maugis_2012$data,
nbcluster = 2:4,
# models="mixmodGaussianModel(family=\"diagonal\")",
# models = "mixmodGaussianModel(listModels = c(\"Gaussian_pk_B\"))",
# models="gaussian_pk_sjk",
models = "VVI",
rmodel = c("LB", "LI", "LC"),
hsize = 2,
nbcores = 6,
impute_missing = FALSE,
scale_data = TRUE
)
res_maugis_selvar <- SelvarClustLasso(
x = data_maugis_2012$data,
nbcluster = 2:4,
# models="mixmodGaussianModel(family=\"diagonal\")",
# models = "mixmodGaussianModel(listModels = c(\"Gaussian_pk_B\"))",
# models="gaussian_pk_sjk",
models = "VVV",
rmodel = c("LB", "LI", "LC"),
hsize = 2,
nbcores = 6,
impute_missing = FALSE,
scale_data = TRUE
)
sourceCpp("D:\\RProject\\MissingData_MOE\\CritclustWrapper.cpp")
numExp <- 1:7
k <- 4
result_mclust <- critClustWrapper(data_maugis_2012$data, numExp, k, "Mclust", "VVV")
result_mclust
result_rmixmod <- critClustWrapper(data_maugis_2012$data, numExp, k, "Rmixmod", "mixmodGaussianModel(family=\"general\")")
print(result_rmixmod)
data("Hawks")
na_rate <- 0.2
# Extract features and true clusters
Y_full <- as.matrix(Hawks[, 10:14])
true_clus <- as.numeric(Hawks[, 7])
p <- ncol(Y_full)
n <- nrow(Y_full)
g <- length(unique(true_clus))
# Extract features and true clusters
data_hawks <- as.matrix(Hawks[, 10:14])
true_clus_hawks <- as.numeric(Hawks[, 7])
sourceCpp("D:\\RProject\\MissingData_MOE\\CritclustWrapper.cpp")
data("Hawks")
na_rate <- 0.2
# Extract features and true clusters
data_hawks <- as.matrix(Hawks[, 10:14])
true_clus_hawks <- as.numeric(Hawks[, 7])
data_hawks
length(unique(true_clus_hawks))
result_mclust <- critClustWrapper(data_hawks, numExp, k, "Mclust", "VVV")
print(result_mclust)
result_rmixmod <- critClustWrapper(data_hawks, numExp, k, "Rmixmod", "mixmodGaussianModel(family=\"general\")")
print(result_rmixmod)
result_mixall <- critClustWrapper(data_hawks, numExp, k, "MixAll", "gaussian_pk_sjk")
print(result_mixall)
numExp <- 1:3
k <- 3
result_mclust <- critClustWrapper(data_hawks, numExp, k, "Mclust", "VVV")
data_maugis_2012$data
result_mclust <- critClustWrapper(data_maugis_2012$data, numExp, k, "Mclust", "VVV")
print(result_mclust$bic)
result_rmixmod <- critClustWrapper(data_maugis_2012$data, numExp, k, "Rmixmod", "mixmodGaussianModel(family=\"general\")")
print(result_rmixmod$bic)
result_mixall <- critClustWrapper(data_maugis_2012$data, numExp, k, "MixAll", "gaussian_pk_sjk")
print(result_mixall$bic)
result_mclust$criterionValue
numExp <- 1: 7
k <- 4
result_mclust <- critClustWrapper(data_maugis_2012$data, numExp, k, "Mclust", "VVV")
print(result_mclust$result_mclust$criterionValue)
result_rmixmod <- critClustWrapper(data_maugis_2012$data, numExp, k, "Rmixmod", "mixmodGaussianModel(family=\"general\")")
print(result_rmixmod$result_mclust$criterionValue)
result_mixall <- critClustWrapper(data_maugis_2012$data, numExp, k, "MixAll", "gaussian_pk_sjk")
print(result_mixall$result_mclust$criterionValue)
numExp <- 1:7
k <- 4
result_mclust <- critClustWrapper(data_maugis_2012$data, numExp, k, "Mclust", "VVV")
print(result_mclust$result_mclust$criterionValue)
result_rmixmod <- critClustWrapper(data_maugis_2012$data, numExp, k, "Rmixmod", "mixmodGaussianModel(family=\"general\")")
print(result_rmixmod$result_mclust$criterionValue)
result_mixall <- critClustWrapper(data_maugis_2012$data, numExp, k, "MixAll", "gaussian_pk_sjk")
print(result_mixall$result_mclust$criterionValue)
result_mixall
result_mclust <- critClustWrapper(data_maugis_2012$data, numExp, k, "Mclust", "VVV")
print(result_mclust$criterionValue)
result_rmixmod <- critClustWrapper(data_maugis_2012$data, numExp, k, "Rmixmod", "mixmodGaussianModel(family=\"general\")")
print(result_rmixmod$criterionValue)
result_mixall <- critClustWrapper(data_maugis_2012$data, numExp, k, "MixAll", "gaussian_pk_sjk")
print(result_mixall$criterionValue)
result_mclust <- critClustWrapper(data_maugis_2012$data, numExp, k, "Mclust", "VVI")
print(result_mclust$criterionValue)
result_rmixmod <- critClustWrapper(data_maugis_2012$data, numExp, k, "Rmixmod", "mixmodGaussianModel(family=\"diagonal\")")
print(result_rmixmod$criterionValue)
result_mixall <- critClustWrapper(data_maugis_2012$data, numExp, k, "MixAll", "gaussian_pk_sjk")
print(result_mixall$criterionValue)
result_rmixmod <- critClustWrapper(data_maugis_2012$data, numExp, k, "Rmixmod", "mixmodGaussianModel(listModels = c(\"Gaussian_pk_L_Bk\"))")
print(result_rmixmod$criterionValue)
result_mclust <- critClustWrapper(data_maugis_2012$data, numExp, k, "Mclust", "VVI")
print(result_mclust$criterionValue)
result_rmixmod <- critClustWrapper(data_maugis_2012$data, numExp, k, "Rmixmod", "mixmodGaussianModel(listModels = c(\"Gaussian_pk_Lk_Bk\"))")
print(result_rmixmod$criterionValue)
result_mixall <- critClustWrapper(data_maugis_2012$data, numExp, k, "MixAll", "gaussian_pk_sjk")
print(result_mixall$criterionValue)
remove.packages("SelvarMix")
create_package_tarball <- function(path) {
Rcpp::compileAttributes(path)
pkg_name <- basename(path)
parent_dir <- dirname(path)
devtools::build(path, path = parent_dir, binary = FALSE)
}
tar_filename <- "D:/RProject/SelvarMix_1.2.1.tar.gz"
if (!file.exists(tar_filename)) {
create_package_tarball("D:/Rproject/SelvarMix_extend")
}
install.packages("D:/RProject/SelvarMix_1.2.1.tar.gz", repos = NULL, type="source")
create_package_tarball <- function(path) {
Rcpp::compileAttributes(path)
pkg_name <- basename(path)
parent_dir <- dirname(path)
devtools::build(path, path = parent_dir, binary = FALSE)
}
tar_filename <- "D:/RProject/SelvarMix_1.2.1.tar.gz"
if (!file.exists(tar_filename)) {
create_package_tarball("D:/Rproject/SelvarMix_extend")
}
install.packages("D:/RProject/SelvarMix_1.2.1.tar.gz", repos = NULL, type="source")
rm(list=ls())
# Data wrangling
library(reshape2)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(tidyr)
library(purrr)
library(stringr)
select <- dplyr::select
library(here)
library(Gmisc)
library(glasso)
library(mvtnorm)
library(Matrix)
library(stats)
library(BMA)
library(mlogitBMA)
library(mlogit)
library(foreach)
library(parallel)
library(doParallel)
library(iterators)
library(matrixStats)
library(aricode)
source("amputation.R")
# MixAll and SelvarMix
library(SelvarMix)
library(MixAll)
library(missRanger)
# Benchmarks
library(vscc)
library(VarSelLCM)
library(RMixtComp)
library(mixture)
library(Rmixmod)
library(clustvarsel)
library(mvtnorm)
library(mclust)
library(MGMM)
library(EMCluster)
library(flexmix)
library(mixtools)
library(bgmm)
dmvnorm <- mvtnorm::dmvnorm
library(MASS)
library(data.table)
library(tmvtnorm)
library(MomTrunc)
library(Stat2Data)
library(VIM)
library(CensMFM)
library(kpodclustr)
library(Amelia)
library(mice)
library(mi)
library(tictoc)
source("utils_missingdata_exp.R")
source("simulate_data.R")
source("EM_Gaussian_withoutNA.R")
source("EM_Gaussian.R")
source("SEM_Gaussian.R")
source("Functions_misspecification.R")
source('Internal_Functions_Gaussian.R')
source('Internal_Functions_All.R')
source('initialization.R')
source('utils_sportisse_exp.R')
source('GPMMCM/Function/F-G.R')
source('GPMMCM/Function/fn/EEE_GMIXCMB.R')
source('GPMMCM/Function/fn/EEI_GMIXCMB.R')
source('GPMMCM/Function/fn/EEV_GMIXCMB.R')
source('GPMMCM/Function/fn/EII_GMIXCMB.R')
source('GPMMCM/Function/fn/EVE_GMIXCMB.R')
source('GPMMCM/Function/fn/EVI_GMIXCMB.R')
source('GPMMCM/Function/fn/EVI_GMIXCMB.R')
source('GPMMCM/Function/fn/EVV_GMIXCMB.R')
source('GPMMCM/Function/fn/VEE_GMIXCMB.R')
source('GPMMCM/Function/fn/VEI_GMIXCMB.R')
source('GPMMCM/Function/fn/VEV_GMIXCMB.R')
source('GPMMCM/Function/fn/VII_GMIXCMB.R')
source('GPMMCM/Function/fn/VVE_GMIXCMB.R')
source('GPMMCM/Function/fn/VVI_GMIXCMB.R')
source('GPMMCM/Function/fn/VVV_GMIXCMB.R')
# Improve model choice
source('ImprovingModelChoice/code/algorithms.R')
source('listToS4.R')
data_maugis_2012 <- simulate_Maugis_data2012()
res_maugis_selvar <- SelvarClustLasso(
x = data_maugis_2012$data,
nbcluster = 2:4,
# models="mixmodGaussianModel(family=\"diagonal\")",
# models = "mixmodGaussianModel(listModels = c(\"Gaussian_pk_B\"))",
# models="gaussian_pk_sjk",
models = "VVI",
rmodel = c("LB", "LI", "LC"),
hsize = 2,
nbcores = 6,
impute_missing = FALSE,
scale_data = TRUE
)
numExp <- 1:7
k <- 4
result_mclust <- critClustWrapper(data_maugis_2012$data, numExp, k, "Mclust", "VVI")
sourceCpp("D:\\RProject\\MissingData_MOE\\CritclustWrapper.cpp")
sourceCpp("D:\\RProject\\MissingData_MOE\\CritclustWrapper.cpp")
result_mclust <- critClustWrapper(data_maugis_2012$data, numExp, k, "Mclust", "VVI")
print(result_mclust$criterionValue)
result_rmixmod <- critClustWrapper(data_maugis_2012$data, numExp, k, "Rmixmod", "mixmodGaussianModel(listModels = c(\"Gaussian_pk_Lk_Bk\"))")
print(result_rmixmod$criterionValue)
result_mixall <- critClustWrapper(data_maugis_2012$data, numExp, k, "MixAll", "gaussian_pk_sjk")
print(result_mixall$criterionValue)
rm(list=ls())
# Data wrangling
library(reshape2)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(tidyr)
library(purrr)
library(stringr)
select <- dplyr::select
library(here)
library(Gmisc)
library(glasso)
library(mvtnorm)
library(Matrix)
library(stats)
library(BMA)
library(mlogitBMA)
library(mlogit)
library(foreach)
library(parallel)
library(doParallel)
library(iterators)
library(matrixStats)
library(aricode)
source("amputation.R")
# MixAll and SelvarMix
library(SelvarMix)
library(MixAll)
library(missRanger)
# Benchmarks
library(vscc)
library(VarSelLCM)
library(RMixtComp)
library(mixture)
library(Rmixmod)
library(clustvarsel)
library(mvtnorm)
library(mclust)
library(MGMM)
library(EMCluster)
library(flexmix)
library(mixtools)
library(bgmm)
dmvnorm <- mvtnorm::dmvnorm
library(MASS)
library(data.table)
library(tmvtnorm)
library(MomTrunc)
library(Stat2Data)
library(VIM)
library(CensMFM)
library(kpodclustr)
library(Amelia)
library(mice)
library(mi)
library(tictoc)
source("utils_missingdata_exp.R")
source("simulate_data.R")
source("EM_Gaussian_withoutNA.R")
source("EM_Gaussian.R")
source("SEM_Gaussian.R")
source("Functions_misspecification.R")
source('Internal_Functions_Gaussian.R')
source('Internal_Functions_All.R')
source('initialization.R')
source('utils_sportisse_exp.R')
source('GPMMCM/Function/F-G.R')
source('GPMMCM/Function/fn/EEE_GMIXCMB.R')
source('GPMMCM/Function/fn/EEI_GMIXCMB.R')
source('GPMMCM/Function/fn/EEV_GMIXCMB.R')
source('GPMMCM/Function/fn/EII_GMIXCMB.R')
source('GPMMCM/Function/fn/EVE_GMIXCMB.R')
source('GPMMCM/Function/fn/EVI_GMIXCMB.R')
source('GPMMCM/Function/fn/EVI_GMIXCMB.R')
source('GPMMCM/Function/fn/EVV_GMIXCMB.R')
source('GPMMCM/Function/fn/VEE_GMIXCMB.R')
source('GPMMCM/Function/fn/VEI_GMIXCMB.R')
source('GPMMCM/Function/fn/VEV_GMIXCMB.R')
source('GPMMCM/Function/fn/VII_GMIXCMB.R')
source('GPMMCM/Function/fn/VVE_GMIXCMB.R')
source('GPMMCM/Function/fn/VVI_GMIXCMB.R')
source('GPMMCM/Function/fn/VVV_GMIXCMB.R')
# Improve model choice
source('ImprovingModelChoice/code/algorithms.R')
source('listToS4.R')
data_maugis_2012 <- simulate_Maugis_data2012()
res_maugis_selvar <- SelvarClustLasso(
x = data_maugis_2012$data,
nbcluster = 2:4,
# models="mixmodGaussianModel(family=\"diagonal\")",
# models = "mixmodGaussianModel(listModels = c(\"Gaussian_pk_B\"))",
# models="gaussian_pk_sjk",
models = "VVI",
rmodel = c("LB", "LI", "LC"),
hsize = 2,
nbcores = 1,
impute_missing = FALSE,
scale_data = TRUE
)
res_maugis_selvar <- SelvarClustLasso(
x = data_maugis_2012$data,
nbcluster = 2:4,
models="mixmodGaussianModel(family=\"diagonal\")",
# models = "mixmodGaussianModel(listModels = c(\"Gaussian_pk_B\"))",
# models="gaussian_pk_sjk",
# models = "VVI",
rmodel = c("LB", "LI", "LC"),
hsize = 2,
nbcores = 1,
impute_missing = FALSE,
scale_data = TRUE
)
remove.packages("SelvarMix")
create_package_tarball <- function(path) {
Rcpp::compileAttributes(path)
pkg_name <- basename(path)
parent_dir <- dirname(path)
devtools::build(path, path = parent_dir, binary = FALSE)
}
tar_filename <- "D:/RProject/SelvarMix_1.2.1.tar.gz"
if (!file.exists(tar_filename)) {
create_package_tarball("D:/Rproject/SelvarMix_extend")
}
install.packages("D:/RProject/SelvarMix_1.2.1.tar.gz", repos = NULL, type="source")
remove.packages("SelvarMix")
create_package_tarball <- function(path) {
Rcpp::compileAttributes(path)
pkg_name <- basename(path)
parent_dir <- dirname(path)
devtools::build(path, path = parent_dir, binary = FALSE)
}
tar_filename <- "D:/RProject/SelvarMix_1.2.1.tar.gz"
if (!file.exists(tar_filename)) {
create_package_tarball("D:/Rproject/SelvarMix_extend")
}
install.packages("D:/RProject/SelvarMix_1.2.1.tar.gz", repos = NULL, type="source")
# MixAll and SelvarMix
library(SelvarMix)
remove.packages("SelvarMix")
